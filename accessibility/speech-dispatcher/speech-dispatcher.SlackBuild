#!/bin/bash

# Slackware build script for speech-dispatcher

# Copyright 2024 Didier Spaier <didier~at~slint~dot~fr>.
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=speech-dispatcher
VERSION=${VERSION:-0.11.5}
BUILD=${BUILD:-1}
TAG=${TAG:-"_gfs"}
PKGTYPE=${PKGTYPE:-txz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
elif [ "$ARCH" = "aarch64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.?z
tar xvf $CWD/sound-icons-0.1.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

patch -p1 --verbose < $CWD/add_flite_generic.conf.diff || exit 1
patch -p1 --verbose < $CWD/speechd.conf.diff || exit 1

./build.sh

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure --prefix=/usr \
--libdir=/usr/lib${LIBDIRSUFFIX} \
--localstatedir=/var \
--sysconfdir=/etc \
--mandir=/usr/man \
--infodir=/usr/info \
--disable-static \
--with-espeak=no \
--with-espeak-ng=yes \
--with-flite=yes \
--with-ibmtts=yes \
--with-baratinoo=no \
--with-kali=no \
--with-ivona=no \
--with-pico=yes \
--with-pulse=yes \
--with-ibmtts=no \
--with-voxin=no \
--with-libao=yes \
--with-alsa=yes \
--with-oss=no \
--with-nas=no \
--with-default-audio-method=libao

make install DESTDIR=$PKG || return 1

mkdir -p $PKG/usr/bin
chmod 755 -R $PKG/usr/bin
mkdir -p $PKG/etc/speech-dispatcher/modules
cp -a $CWD/rhvoice.conf $PKG/etc/speech-dispatcher/modules
cp -a $TMP/$PRGNAM-$VERSION/config/modules/flite-generic.conf $PKG/etc/speech-dispatcher/modules
mkdir -p $PKG/usr/share/sounds/sound-icons
mkdir -p $PKG/usr/doc/sound-icons-0.1
( cd $TMP/sound-icons-0.1 || exit
cp -a README COPYING $PKG/usr/doc/sound-icons-0.1
rm README COPYING
cp -a * $PKG/usr/share/sounds/sound-icons
)

rm -f $PKG/etc/speech-dispatcher/espeak-ng.conf*

# Although I contributed espeak-mbrola-generic.conf and
# espeak-mbrola-generic.conf we do not need them anymore... - Didier
noconf="
baratinoo.conf
cicero.conf
dtk-generic.conf
epos-generic.conf
espeak-generic.conf
espeak-mbrola-generic.conf
espeak-ng-mbrola-generic.conf
espeak.conf
festival.conf
ivona.conf
kali.conf
llia_phon-generic.conf
mary-generic-disabled.conf
mary-generic.conf
swift-generic.conf"
for i in $noconf; do
  rm -f $PKG/etc/speech-dispatcher/modules/$i
done
for i in sd_cicero sd_festival; do
    rm -f $PKG/usr/lib64/speech-dispatcher-modules/$i
done
mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
  for i in README.style.md README.md README.overview.md; do
echo "processing $i"
#	BASE_PATH=${MD_PATH%.md}
    HTML_PATH=$PKG/usr/doc/$PRGNAM-$VERSION/${i%.md}.html
    pandoc -s -f gfm -t html5 -o $HTML_PATH $i
    rm $i
  done
( cd $TMP/$PRGNAM-$VERSION/doc || exit
for i in ssip.texi spd-say.texi speech-dispatcher.texi speech-dispatcher-cs.texi; do
echo "processing $i"
    texi2any --html --no-headers --no-split $i
done
echo "files to be copied to  $PKG/usr/doc/$PRGNAM-$VERSION"
ls *.html figures $PKG/usr/doc/$PRGNAM-$VERSION
cp -r *.html figures $PKG/usr/doc/$PRGNAM-$VERSION
)

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

rm -rf $PKG/usr/lib${LIBDIRSUFFIX}/*.la

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

rm -f $PKG/usr/info/dir
gzip -9 $PKG/usr/info/*.info*

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a ANNOUNCE AUTHORS COPYING* NEWS README.* TODO  \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/doinst.sh > $PKG/install/doinst.sh
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
